/*
 *  author: Suhas Vittal
 *  date:   10 December 2024
 * */

#include "transaction.h"

#include <algorithm>

////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////

bool
trans_is_read(TransactionType t)
{
    return t != TransactionType::WRITE;
}

////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////

Transaction::Transaction(uint8_t cid, iptr_t inst, TransactionType t, uint64_t addr, bool addr_is_ip)
    :coreid(cid),
    inst_list({inst}),
    type(t),
    address(addr),
    address_is_ip(addr_is_ip)
{}

////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////

bool
Transaction::contains_inst(iptr_t inst) const
{
    return std::find(inst_list.begin(), inst_list.end(), inst) != inst_list.end();
}

void
Transaction::merge(Transaction& y)
{
    std::move(y.inst_list.begin(), y.inst_list.end(), std::back_inserter(inst_list));
}

////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
